 Param(
    [System.Management.Automation.PSCredential]$DomainCreds,
    [string]$DomainName,
    [String]$DomainRoot,
    [String]$DefaultUsername
 )
    $OUs = @(
        @{name="Workstations";path="$DomainRoot"},
        @{name="Servers";path="$DomainRoot"},
        @{name="People";path="$DomainRoot"},
        @{name="Groups";path="$DomainRoot"},
        @{name="Resources";path="$DomainRoot"}
        @{name="Admins";path="OU=People,$DomainRoot"},
        @{name="Security";path="OU=Groups,$DomainRoot"},
        @{name="Application";path="OU=Groups,$DomainRoot"},
        @{name="File Share";path="OU=Groups,$DomainRoot"},
        @{name="RBAC";path="OU=Groups,$DomainRoot"}
    )
    $Users = @(
        "Liam Sullivan",
        "Emma Wilson",
        "John Carter",
        "Mary Davis",
        "David Miller",
        "Evelyn Thorne",
        "Charlie Beaumont",
        "Noah Greene",
        "Olivia Walker",
        "Lucas Evans"
        "(Admin) Luke Evans",
        "(DA) Luke Evans",
        "(Admin) Charlie Beaumont",
        "(Admin) Noah Greene",
        "(DA) Noah Greene",
        "(EA) Noah Greene",
        "(EA) Luke Evans"
    )

    ForEach ($OU in $OUs)
    {
        New-ADOrganizationalUnit -Name $OU.name -Path $OU.path -ProtectedFromAccidentalDeletion $true -Credential $DomainCreds
    }

    $EnterpriseAdmins = @()
    $DomainAdmins = @()
    $AdminAccounts = @()

    ForEach ($User in $Users)
    {
        $Split = $User.Split(" ")
        If ($Split.Count -gt 2) {
            $First = $Split[1]
            $Last = $Split[2]
            $Path = "OU=Admins,OU=People,$DomainRoot"
        }
        Else {
            $First = $Split[0]
            $Last = $Split[1]
            $Path = "OU=People,$DomainRoot"
        }
            
        $Name = "$($First.substring(0,1))$($Last)"
        If ($Split[0] -eq "(Admin)"){
            $Name = "$Name-ADM"
            $AdminAccounts += $Name
        }
        If ($Split[0] -eq "(DA)"){
            $Name = "$Name-DA"
            $DomainAdmins += $Name
        }
        If ($Split[0] -eq "(EA)"){
            $Name = "$Name-EA"
            $EnterpriseAdmins += $Name
        }

        $args = @{
             Name = $Name
             UserPrincipalName = "$Name@$DomainName"
             SamAccountName = $Name
             AccountPassword = $DomainCreds.Password
             DisplayName = $User
             GivenName = $First
             Surname = $Last
             Path = $Path
             Enabled = $true
             Credential = $DomainCreds
        }
        New-ADUser @args
    }

    Move-ADObject -Identity "CN=$DefaultUsername,CN=Users,$DomainRoot" -TargetPath "OU=Admins,OU=People,$DomainRoot"
    
    $Groups = @(
        @{name = "SEC-ServerAdmins";OU = "OU=Security,OU=Groups,$DomainRoot";description = "Users with Admin permissions on Servers";members = $AdminAccounts},
        @{name = "SEC-RODCDelegatedAdmins";OU = "OU=Security,OU=Groups,$DomainRoot";description = "Users with Delegated Admin Permissions on RODCs";members = @()},
        @{name = "FS-DFS-IT-RW";OU = "OU=File Share,OU=Groups,$DomainRoot";description = "Read/Write on \\$DomainName\IT$";members = @()},
        @{name = "APP-BackupUtil-User";OU = "OU=Application,OU=Groups,$DomainRoot";description = "Login to BackupUtil";members = @()},
        @{name = "APP-BackupUtil-Admin";OU = "OU=Application,OU=Groups,$DomainRoot";description = "Admin rights in BackupUtil";members = @()}
    )

    ForEach ($Group in $Groups)
    {
        New-ADGroup -Name $Group.name -Path $Group.OU -Description $Group.description -GroupCategory Security -GroupScope Global
        If (($Group.Members).count -gt 0) {Add-ADGroupMember $Group.Name -Members $Group.Members}
    }
    
    #>
    Add-ADGroupMember "Domain Admins" -Members $DomainAdmins
    Add-ADGroupMember "Enterprise Admins" -Members $EnterpriseAdmins