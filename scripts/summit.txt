 Param(
    [System.Management.Automation.PSCredential]$DomainCreds,
    [string]$DomainName,
    [String]$DomainRoot,
    [String]$DefaultUsername
 )
    $OUs = @(
        @{name="Workstations";path="$DomainRoot"},
        @{name="Servers";path="$DomainRoot"},
        @{name="People";path="$DomainRoot"},
        @{name="Groups";path="$DomainRoot"},
        @{name="Resources";path="$DomainRoot"}
        @{name="Admins";path="OU=People,$DomainRoot"},
        @{name="Security";path="OU=Groups,$DomainRoot"},
        @{name="Application";path="OU=Groups,$DomainRoot"},
        @{name="File Share";path="OU=Groups,$DomainRoot"},
        @{name="RBAC";path="OU=Groups,$DomainRoot"}
    )

    $Users = @("John Smith",
        "Mary Johnson",
        "Robert Williams",
        "Jennifer Brown",
        "Michael Jones",
        "Linda Davis",
        "David Miller",
        "Christopher Wilson",
        "Angela Garcia",
        "Brian Rodriguez",
        "Nicole Martinez",
        "Kevin Anderson",
        "Jessica Taylor",
        "Jason Thomas",
        "Michelle Jackson"
        "(Admin) Nicole Martinez",
        "(Admin) Kevin Anderson",
        "(Admin) Jessica Taylor",
        "(Admin) Jason Thomas",
        "(Admin) Michelle Jackson",
        "(Domain Admin) Jason Thomas",
        "(Domain Admin) Michelle Jackson"
    )


    $DomainAdmins = @()
    $AdminAccounts = @()
    ForEach ($User in $Users)
    {
        If ($User -like "(Admin)*") {
            $First = $User.Split(" ")[1]
            $Last = $User.Split(" ")[2]
            $Name = "$($First.substring(0,1))$($Last.substring(0,4))-ADM"
            $Path = "OU=Admins,OU=People,$DomainRoot"
            $AdminAccounts += $Name
        }
        ElseIf ($User -like "(Domain Admin)*") {
            $First = $User.Split(" ")[2]
            $Last = $User.Split(" ")[3]
            $Name = "$($First.substring(0,1))$($Last.substring(0,4))-DA"
            $Path = "OU=Admins,OU=People,$DomainRoot"
            $DomainAdmins += $Name
        }
        Else {
            $First = $User.Split(" ")[0]
            $Last = $User.Split(" ")[1]
            $Name = "$($First.substring(0,1))$($Last.substring(0,4))"
            $Path = "OU=People,$DomainRoot"
        }
        $args = @{
             Name = $User
             UserPrincipalName = "$Name@$DomainName"
             SamAccountName = $Name
             AccountPassword = $DomainCreds.Password
             DisplayName = $User
             GivenName = $First
             Surname = $Last
             Path = $Path
             Enabled = $true
             Credential = $DomainCreds
        }
        New-ADUser @args
    }

    $Groups = @(
        @{name = "SEC-ServerAdmins";Path = "OU=Security,OU=Groups,$DomainRoot";description = "Users with Admin permissions on Servers";members = $AdminAccounts},
        @{name = "SEC-RODCDelegatedAdmins";Path = "OU=Security,OU=Groups,$DomainRoot";description = "Users with Delegated Admin Permissions on RODCs";members = @()},
        @{name = "FS-DFS-IT-RW";Path = "OU=File Share,OU=Groups,$DomainRoot";description = "Read/Write on \\$DomainName\IT$";members = @()},
        @{name = "APP-BackupUtil-User";Path = "OU=Application,OU=Groups,$DomainRoot";description = "Login to BackupUtil";members = @()},
        @{name = "APP-BackupUtil-Admin";Path = "OU=Application,OU=Groups,$DomainRoot";description = "Admin rights in BackupUtil";members = @()}
    )


    ForEach ($OU in $OUs)
    {
        New-ADOrganizationalUnit @OU -ProtectedFromAccidentalDeletion $true -Credential $DomainCreds
    }
    Move-ADObject -Identity "CN=$DefaultUsername,CN=Users,$DomainRoot" -TargetPath "OU=Admins,OU=People,$DomainRoot"

    ForEach ($Group in $Groups)
    {
        $args = @{
            Name = $Group.Name
            Path = $Group.Path
            Description = $Group.Description
        }
        New-ADGroup @args -GroupCategory Security -GroupScope Global
        If (($Group.Members).Count -gt 0) {Add-ADGroupMember $Group.Name -Members $Group.Members}
    }

    Add-ADGroupMember "Domain Admins" -Members $DomainAdmins